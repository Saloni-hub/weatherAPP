{"version":3,"sources":["components/weth.js","components/formCompo.js","App.js","reportWebVitals.js","index.js"],"names":["minmaxTemp","min","max","className","weth","props","city","weatherIcon","temp_celsius","temp_min","temp_max","description","formCompo","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","setState","sys","celsius","calcullateCelsius","main","temp","weather","get_weatherIcon","id","state","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeID","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9d1f695.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './css/style.css';\r\nconst weth = (props) => {\r\n  return (\r\n    <div className=\"container text-light\">\r\n     <div className=\"cards pt-4\">\r\n         <h1>{props.city}</h1>\r\n         <h5 className=\"py-4\">\r\n         <i className={`wi ${props.weatherIcon} display-1`}></i>.\r\n         </h5>\r\n         {\r\n             props.temp_celsius ?(<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>):null\r\n         }\r\n      \r\n         {/* show min and max temp */}\r\n         {minmaxTemp(props.temp_min,props.temp_max)}\r\n\r\n         <h4 className=\"py-3\">{props.description}</h4>\r\n     </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction minmaxTemp(min,max) {\r\n    if(min && max) {\r\n        return (\r\n            <h3>\r\n            <span className=\"px-4\">\r\n                {min}&deg;\r\n            </span>\r\n            <span className=\"px-4\">\r\n                {max}&deg;\r\n            </span>\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nexport default weth;","import React from \"react\";\r\nimport \"./css/style.css\";\r\nconst formCompo = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n    <div>\r\n        {props.error? err():null}\r\n    </div>\r\n     <form onSubmit={props.loadweather}>\r\n     <div className=\"row\">\r\n        <div className=\"col-md-3 offset-md-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"city\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"city\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mt-md-0 text-md-left\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"country\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"country\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <button className=\"btn btn-warning py-2\">Get Weather</button>\r\n        </div>\r\n      </div>\r\n     </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction err() {\r\n    return(\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">Please Enter City and Country</div>\r\n    )\r\n}\r\nexport default formCompo;\r\n","import React, { Component } from \"react\";\nimport Weth from \"./components/weth\";\nimport FormCompo from './components/formCompo';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport \"weather-icons/css/weather-icons.css\";\n\nconst API_KEY = \"0280296029325e7498a65eb7b6d70990\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      country: \"\",\n      icon: \"\",\n      main: \"\",\n      celsius: \"\",\n      temp_max: \"\",\n      temp_min: \"\",\n      description: \"\",\n      error: false,\n    };\n    this.weatherIcon = {\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n    }\n  }\ncalcullateCelsius(temp){\n  let cel = Math.floor(temp-273.15)\n  return cel;\n}\n\nget_weatherIcon(icons,rangeID) {\n  switch(true)\n  {\n    case rangeID >= 200 && rangeID <= 232:\n       this.setState({icon:this.weatherIcon.Thunderstorm})\n    break;\n    case rangeID >= 300 && rangeID <= 321:\n       this.setState({icon:this.weatherIcon.Drizzle})\n    break;\n    case rangeID >= 500 && rangeID <= 531:\n       this.setState({icon:this.weatherIcon.Rain})\n    break;\n    case rangeID >= 600 && rangeID <= 632:\n       this.setState({icon:this.weatherIcon.Snow})\n    break;\n    case rangeID >= 700 && rangeID <= 781:\n       this.setState({icon:this.weatherIcon.Atmosphere})\n    break;\n    case rangeID == 800 :\n       this.setState({icon:this.weatherIcon.Clear})\n    break;\n    case rangeID >= 801 && rangeID <= 804:\n       this.setState({icon:this.weatherIcon.Clouds})\n    break;\n    default:\n      this.setState({icon:this.weatherIcon.Clouds})\n  }\n}\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    if(city && country){\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}uk&appid=${API_KEY}`\n    );\n    const response = await api_call.json();\n\n    // console.log(response);\n    this.setState({\n      city: `${response.name},${response.sys.country}`,\n      celsius: this.calcullateCelsius(response.main.temp),\n      temp_max:this.calcullateCelsius(response.main.temp_max),\n      temp_min:this.calcullateCelsius(response.main.temp_min),\n      description:response.weather[0].description,\n    });\n    this.get_weatherIcon(this.weatherIcon,response.weather[0].id)\n  } else {\n    this.setState({\n      error:true\n    })\n  }\n}\n  render() {\n    return (\n      <div className=\"App\">\n        <FormCompo loadweather={this.getWeather} error={this.state.error}/>\n        <Weth\n          city={this.state.city}\n          country={this.state.country}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}